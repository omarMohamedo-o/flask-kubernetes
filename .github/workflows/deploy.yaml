name: flask-kubernetes

on:
  push:
    branches:
      - master

env:
  CONTAINER_REGISTRY: docker.io
  DOCKER_USERNAME: "${{ vars.DOCKER_USERNAME }}"

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Build
        run: docker build -t 0marmohamed/flask-kubernetes:${{ github.sha }} .

      - name: Docker Login
        run: echo "${{ secrets.PASSWORD }}" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Docker Push
        run: docker push 0marmohamed/flask-kubernetes:${{ github.sha }}

  dev-deploy:
    name: Deploy to Dev Env
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set Kubeconfig Context
        uses: azure/k8s-set-context@v4.0.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Set up Kubeconfig
        run: kubectl get nodes

      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl version --client
          helm version
          echo "-----------------------------------------"
          kubectl get nodes
          kubectl get namespaces

      - name: Update Helm Image Tag in values.yaml
        shell: bash
        run: |
          sed -i "s|^\([[:space:]]*repository:\).*|\1 0marmohamed/flask-kubernetes|g" helm/mychart/values.yaml
          sed -i "s|^\([[:space:]]*tag:\).*|\1 ${{ github.sha }}|g" helm/mychart/values.yaml
          sed -i "s|^\([[:space:]]*pullPolicy:\).*|\1 IfNotPresent|g" helm/mychart/values.yaml

      - name: Deploy Helm chart
        run: |
          helm upgrade --install flask-kubernetes ./helm/mychart \
            --namespace ${{ vars.NAMESPACE }} \
            --create-namespace \
            --set image.repository=0marmohamed/flask-kubernetes \
            --set image.tag=${{ github.sha }} \
            --set image.pullPolicy=IfNotPresent \
            --set replicaCount=2 \
            --set labels.place=iti \
            --set labels.name=yourname \
            --set service.type=LoadBalancer

      - name: Inspect after deployment
        run: |
          sleep 20
          echo "---------- PODS ----------"
          kubectl get pods --namespace ${{ vars.NAMESPACE }}
          echo "---------- SERVICES ----------"
          kubectl get services --namespace ${{ vars.NAMESPACE }}
          echo "---------- DEPLOYMENTS ----------"
          kubectl get deployments --namespace ${{ vars.NAMESPACE }}